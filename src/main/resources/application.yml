
logging:
    file:
        name: /logs/sboard.log
    level:
        jdbc:
            resultsettable: debug
            sqlonly: debug
            sqltiming: debug
        org:
            hibernate:
                orm:
                    jdbc:
                        bind: trace
                sql: debug
        root: info
server:
    port: 8080
    servlet:
        context-path: /
        encoding:
            force-response: true
spring:
    application:
        name: sboard
        version: ${ext.version}
    datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: "!Qw234rt"
        url: jdbc:mysql://localhost:3306/jboard
        username: jboard
    devtools:
        livereload:
            enabled: true
    jpa:
        database: mysql
        hibernate:
            ddl-auto: update
            naming:
                physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        properties:
            hibernate:
                format_sql: true
                show_sql: true
    mail:
        host: smtp.gmail.com # 1
        port: 587 # 2
        username: ppyyhh3285@gmail.com # 3
        password: fbax fmxo pxup eook # 4
        properties:
            mail:
                smtp:
                    auth: true # 5
                    timeout: 5000 # 6
                    starttls:
                        enable: true # 7
                        required: true
                        connectiontimeout: 5000
                        timeout: 5000
                        writetimeout: 5000
                        auth-code-expiration-millis: 300000  # 5 * 60 * 1000 == 5ë¶„
    thymeleaf:
        prefix: classpath:/templates

    servlet:
        multipart:
            location: uploads/
            max-file-size: 10MB

    security:
        oauth2:
            client:
                provider:
                    google:
                        authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
                        token-uri: https://accounts.google.com/o/oauth2/token
                        user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
                        user-name-attribute: name
#                    naver:
#                        authorization-uri: https://nid.naver.com/oauth2.0/authorize
#                        token-uri: https://nid.naver.com/oauth2.0/token
#                        user-info-uri: https://openapi.naver.com/v1/nid/me
#                        user-name-attribute: response
                registration:
                    google:
                        client-id: 60431749569-m5e000jb59uqkinlqo5udh3m54d5mlgk.apps.googleusercontent.com
                        client-secret: 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
                        redirect-uri: http://localhost:8080/login/oauth2/code/google
                        scope:
                            - email
                            - profile
#                    naver:
#                        client-id: btZAeb5IZW9UPv1L1SBs
#                        client-secret: btZAeb5IZW9UPv1L1SBs
#                        redirect-uri: http://localhost:8080/login/oauth2/code/naver
#                        client-name: Naver
#                        authorization-grant-type: authorization_code
#                        scope:
#                            - name